üìã TIPOS DE VARI√ÅVEIS EM JAVASCRIPT üìã

=======================
1. STRING (Texto)
=======================
let nome = "Jo√£o";
let sobrenome = 'Silva';
let frase = `Ol√°, ${nome}!`;

// Exemplos pr√°ticos:
let email = "joao@email.com";
let senha = "123456";
let mensagem = "Bem-vindo ao sistema!";

// M√©todos de string:
console.log(nome.length); // 4
console.log(nome.toUpperCase()); // "JO√ÉO"
console.log(email.includes("@")); // true

=======================
2. NUMBER (N√∫mero)
=======================
let idade = 25;
let preco = 19.99;
let negativo = -10;

// Exemplos pr√°ticos:
let quantidade = 5;
let desconto = 0.15;
let total = preco * quantidade;
let precoFinal = total - (total * desconto);

// Opera√ß√µes matem√°ticas:
console.log(10 + 5); // 15
console.log(10 - 3); // 7
console.log(4 * 3); // 12
console.log(15 / 3); // 5

=======================
3. BOOLEAN (Verdadeiro/Falso)
=======================
let ativo = true;
let inativo = false;

// Exemplos pr√°ticos:
let maiorIdade = idade >= 18;
let temDesconto = preco > 20;
let usuarioLogado = true;

// Compara√ß√µes:
console.log(5 > 3); // true
console.log(10 === "10"); // false
console.log(10 == "10"); // true

=======================
4. UNDEFINED (Indefinido)
=======================
let variavel;
console.log(variavel); // undefined

// Exemplos pr√°ticos:
let resultado;
function calcular() {
    // Se n√£o retornar nada, ser√° undefined
}
resultado = calcular();
console.log(resultado); // undefined

=======================
5. NULL (Nulo)
=======================
let dados = null;

// Exemplos pr√°ticos:
let usuario = null; // Nenhum usu√°rio logado
let arquivo = null; // Nenhum arquivo selecionado

if (usuario === null) {
    console.log("Nenhum usu√°rio logado");
}

=======================
6. OBJECT (Objeto)
=======================
let pessoa = {
    nome: "Ana",
    idade: 30,
    email: "ana@email.com"
};

// Exemplos pr√°ticos:
let produto = {
    id: 1,
    nome: "Notebook",
    preco: 2500.00,
    disponivel: true
};

// Acessando propriedades:
console.log(pessoa.nome); // "Ana"
console.log(produto["preco"]); // 2500.00

// Adicionando propriedades:
pessoa.telefone = "99999-9999";

=======================
7. ARRAY (Lista)
=======================
let frutas = ["ma√ß√£", "banana", "laranja"];
let numeros = [1, 2, 3, 4, 5];

// Exemplos pr√°ticos:
let cores = ["azul", "verde", "vermelho"];
let idades = [18, 25, 30, 45];
let usuarios = ["Ana", "Jo√£o", "Maria"];

// M√©todos de array:
frutas.push("uva"); // Adiciona no final
console.log(frutas.length); // 4
console.log(frutas[0]); // "ma√ß√£"

// Loop em array:
for (let i = 0; i < cores.length; i++) {
    console.log(cores[i]);
}

=======================
8. FUNCTION (Fun√ß√£o)
=======================
function saudar() {
    return "Ol√°!";
}

// Exemplos pr√°ticos:
function calcularArea(largura, altura) {
    return largura * altura;
}

function verificarIdade(idade) {
    if (idade >= 18) {
        return "Maior de idade";
    } else {
        return "Menor de idade";
    }
}

// Arrow functions:
const somar = (a, b) => a + b;
const dobrar = x => x * 2;

// Chamando fun√ß√µes:
console.log(calcularArea(10, 5)); // 50
console.log(verificarIdade(20)); // "Maior de idade"
console.log(somar(3, 7)); // 10

=======================
FORMAS DE DECLARAR:
=======================
var antigo = "n√£o use mais"; // escopo global/fun√ß√£o
let moderno = "use este"; // escopo de bloco
const CONSTANTE = "n√£o muda"; // constante

// Exemplos de escopo:
function exemploEscopo() {
    var x = 1;
    let y = 2;
    const z = 3;
    
    if (true) {
        var x = 4; // Substitui o x anterior
        let y = 5; // Novo y apenas neste bloco
        // const z = 6; // Erro! N√£o pode redeclarar const
        console.log(x, y, z); // 4, 5, 3
    }
    
    console.log(x, y, z); // 4, 2, 3
}

=======================
VERIFICANDO TIPOS:
=======================
console.log(typeof "texto"); // "string"
console.log(typeof 42); // "number"
console.log(typeof true); // "boolean"
console.log(typeof undefined); // "undefined"
console.log(typeof null); // "object" (peculiaridade do JS)
console.log(typeof {}); // "object"
console.log(typeof []); // "object"
console.log(typeof function(){}); // "function" 